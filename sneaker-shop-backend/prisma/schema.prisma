generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  staff
  admin
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  fullName  String?
  phone     String?
  role      Role     @default(user)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  orders    Order[]
}

model Brand {
  id   String @id @default(uuid())
  name String @unique
  products Product[]
}

model Category {
  id       String     @id @default(uuid())
  name     String     @unique
  parentId String?
  parent   Category?  @relation("CategoryToCategory", fields: [parentId], references: [id])
  children Category[] @relation("CategoryToCategory")
  products Product[]
}

model Product {
  id          String           @id @default(uuid())
  name        String
  slug        String           @unique
  brandId     String?
  brand       Brand?           @relation(fields: [brandId], references: [id])
  categoryId  String?
  category    Category?        @relation(fields: [categoryId], references: [id])
  basePrice   Decimal          @default(0)
  description String?
  isActive    Boolean          @default(true)
  createdAt   DateTime         @default(now())
  variants    ProductVariant[]
}

model ProductVariant {
  id        String          @id @default(uuid())
  productId String
  product   Product         @relation(fields: [productId], references: [id])
  color     String?
  images    Json            @default("[]")
  sizes     VariantSize[]
}

model VariantSize {
  id          String         @id @default(uuid())
  variantId   String
  variant     ProductVariant @relation(fields: [variantId], references: [id])
  sizeUS      Float?
  sizeEU      Int?
  sizeCM      Float?
  sku         String?        @unique
  price       Decimal?
  inventory   Inventory?
  orderItems  OrderItem[]
}

model Inventory {
  variantSizeId String      @id
  variantSize   VariantSize @relation(fields: [variantSizeId], references: [id])
  qtyOnHand     Int         @default(0)
  qtyReserved   Int         @default(0)
}


model Order {
  id        String      @id @default(uuid())
  userId    String?
  user      User?       @relation(fields: [userId], references: [id])
  status    String      @default("pending") // pending|paid|confirmed|shipped|completed|cancelled
  subtotal  Decimal     @default(0)
  shipping  Decimal     @default(0)
  total     Decimal     @default(0)
  placedAt  DateTime    @default(now())
  items     OrderItem[]
}

model OrderItem {
  id              String      @id @default(uuid())
  orderId         String
  order           Order       @relation(fields: [orderId], references: [id])
  variantSizeId   String
  variantSize     VariantSize @relation(fields: [variantSizeId], references: [id])
  quantity        Int
  unitPrice       Decimal
}
